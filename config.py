from datetime import timedelta
import numpy as np

# ────────────────────────────────────────────────────────────────────────────────
# 1) Основные пути и логи
# ────────────────────────────────────────────────────────────────────────────────

# Путь к CSV с историческими часами евро-доллара
DATA_FILE = 'EURUSD_iH1.csv'

# Файл, в который Live Checker будет писать логи (аргумент logging.basicConfig)
LOG_FILE = 'market_system.log'

# Файл, в котором Trainer сохраняет «обученную» модель (best_cl, best_w и список паттернов)
TRAINER_OUTPUT_FILE = 'trainer_output.json'

# ────────────────────────────────────────────────────────────────────────────────
# 2) Параметры поиска паттернов (используются и в Trainer, и частично в Live Checker)
# ────────────────────────────────────────────────────────────────────────────────

# Минимальное число появлений паттерна (total) на датасете,
# чтобы он был отобран
MIN_TOTAL = 5

# Новый порог: сколько минимум раз паттерн должен появиться в walk-forward,
# чтобы попасть в финальный список (например, 3 раза )
MIN_PATTERN_APPEARANCES = 10

# Минимальный процент успешных срабатываний (rate) для отбора паттерна
MIN_RATE = 65

# Диапазон change_limit (порог движения цены в пунктах), шаг 0.001
# Т. е. 0.001, 0.002, 0.003, 0.004
CHANGE_LIMITS = np.array([0.0010, 0.0020, 0.0030, 0.0040])

# Диапазон window (количество subsequent баров, в которых ищем тейк/стоп):
# 3, 5, 8
WINDOWS = [3, 5, 8]

# Диапазон длины паттерна (число баров на входе): 2, 3, 4, 5
PATTERN_LEN_START = 2
PATTERN_LEN_END   = 5

# ────────────────────────────────────────────────────────────────────────────────
# 3) Параметры «скользящего» обучения для Trainer
# ────────────────────────────────────────────────────────────────────────────────

# Задаёт, на скольких следующих барах мы измеряем отклонения цены.
LOOKAHEAD_BARS = 10

# TRAIN_MONTHS = 12  → сколько последних месяцев использовать на «train»
TRAIN_MONTHS = 12

# TEST_MONTHS = 3   → сколько месяцев после train оставить на «test»
TEST_MONTHS = 3

# TOTAL_MONTHS = 15 → TRAIN_MONTHS + TEST_MONTHS
TOTAL_MONTHS = TRAIN_MONTHS + TEST_MONTHS

# ────────────────────────────────────────────────────────────────────────────────
# 4) Настройки Interactive Brokers (Paper Trading)
# ────────────────────────────────────────────────────────────────────────────────

# Хост и порт для подключения к IB Gateway/TWS (Paper Trading обычно 127.0.0.1:4002)
IB_HOST   = '127.0.0.1'
IB_PORT   = 4002

# ID клиента (может быть любым свободным целым)
CLIENT_ID = 1

# ────────────────────────────────────────────────────────────────────────────────
# 5) Параметры расписания:
#    - Trainer запускается по отдельному расписанию (cron / Task Scheduler).
#    - Live Checker будет «poll-and-detect» каждые N минут (POLL_INTERVAL_MINUTES).
# ────────────────────────────────────────────────────────────────────────────────

POLL_INTERVAL_MINUTES = 30
POLL_INTERVAL = timedelta(minutes=POLL_INTERVAL_MINUTES)

# ────────────────────────────────────────────────────────────────────────────────
# 6) (Опционально) зависимости для requirements.txt
# ────────────────────────────────────────────────────────────────────────────────

REQUIREMENTS = [
    'pandas>=1.3.0',
    'numpy>=1.21.0',
    'scikit-learn>=1.0.0',
    'ib_insync>=0.9.70'
]
