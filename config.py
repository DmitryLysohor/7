from datetime import timedelta
import numpy as np

# ────────────────────────────────────────────────────────────────────────────────
# 1) Основные пути и логи
# ────────────────────────────────────────────────────────────────────────────────

DATA_FILE = 'EURUSD_iH1.csv'            # используется в trainer.py: путь к CSV
LOG_FILE_TRAINER = 'trainer.log'        # Trainer пишет лог в trainer.log
LOG_FILE_LIVE    = 'live_checker.log'   # (может пригодиться в будущем)
TRAINER_OUTPUT_FILE = 'trainer_output.json'  # куда сохраняется финальный JSON

# ────────────────────────────────────────────────────────────────────────────────
# 2) Спред, проскальзывание, комиссия
# ────────────────────────────────────────────────────────────────────────────────

USE_FIXED_SPREAD     = True    # trainer.py проверяет, использовать ли фиксированный спред
FIXED_SPREAD         = 0.0001  # фиксированный спред ~1 пипс (EURUSD)
SLIPPAGE_PER_TRADE   = 0.00005 # проскальзывание ~0.5 пипса
COMMISSION_PER_TRADE = 0.00002 # комиссия 0.2 пипса (вход + выход)

# ────────────────────────────────────────────────────────────────────────────────
# 3) Параметры поиска паттернов (pattern_finder.py)
# ────────────────────────────────────────────────────────────────────────────────

MIN_TOTAL               = 5     # trainer.py: при walk-forward миним. вхождений
MIN_PATTERN_APPEARANCES = 10    # trainer.py: сколько «выживет» паттерн
MIN_RATE                = 65    # trainer.py: миним. % успешных сделок (rate)

# Диапазон change_limit (pattern_finder.py)
CHANGE_LIMITS = np.arange(0.0005, 0.0051, 0.0005)
# Диапазон окон (количество баров вперед)
WINDOWS = [1, 2]
# Диапазон длины паттерна (pattern_finder.py)
PATTERN_LEN_START = 2
PATTERN_LEN_END   = 3

# ────────────────────────────────────────────────────────────────────────────────
# 4) Параметры «скользящего» обучения (walk-forward)
# ────────────────────────────────────────────────────────────────────────────────

LOOKAHEAD_BARS = 10          # trainer.py и фильтры используют для MFE/MAE/exit-bars
TRAIN_MONTHS  = 12           # trainer.py: месяцев в обучающем сегменте
TEST_MONTHS   = 12            # trainer.py: месяцев в тестовом сегменте
TOTAL_MONTHS  = TRAIN_MONTHS + TEST_MONTHS  # =15

# Сколько «лучших» (cl, w) храним для гибкого подбора
TOP_N_COMBOS = 3

# ────────────────────────────────────────────────────────────────────────────────
# 5) Фильтры качества паттерна (финальная стадия)
# ────────────────────────────────────────────────────────────────────────────────

MIN_RR = 2.0                 # trainer.py: требуемое соотношение mfe_75/mae_75 ≥ 2.0
MAX_MEDIAN_EXIT_BARS = 2.0   # trainer.py: медиана выхода ≤ 2 бара

MIN_MEAN_MFE = 0.001         # trainer.py: средний MFE ≥ 0.001
MAX_MAE_90   = 0.002         # trainer.py: 90-й перцентиль MAE ≤ 0.002

# Эти две константы нужны для TimeFilter / SessionFilter
TIME_WIN_RATE_THRESHOLD = 80.0   # ≥80%
TIME_OCC_THRESHOLD      = 3      # ≥3 вхождения

# ────────────────────────────────────────────────────────────────────────────────
# 6) Настройки Interactive Brokers (Paper Trading)
# ────────────────────────────────────────────────────────────────────────────────

IB_HOST   = '127.0.0.1'  # не используется в trainer.py
IB_PORT   = 4002        # не используется в trainer.py
CLIENT_ID = 1           # не используется в trainer.py

# ────────────────────────────────────────────────────────────────────────────────
# 7) Параметры расписания (Live Checker)
# ────────────────────────────────────────────────────────────────────────────────

POLL_INTERVAL_MINUTES = 30               # не используется в trainer.py
POLL_INTERVAL = timedelta(minutes=POLL_INTERVAL_MINUTES)

# ────────────────────────────────────────────────────────────────────────────────
# 8) Зависимости (requirements.txt)
# ────────────────────────────────────────────────────────────────────────────────

REQUIREMENTS = [
    'pandas>=1.3.0',
    'numpy>=1.21.0',
    'scikit-learn>=1.0.0',
    'ta>=0.8.0',        # для ATR и других индикаторов
    'ib_insync>=0.9.70'
]
